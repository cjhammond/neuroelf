# BinaryFileFormat (leave this tag as magic token!)

# NeuroElf file format for *.NTT files (Numeric Tabular Text data files)
#
# An NTT file may contain additional header lines, but only one
# slab of data!
#
# Version:  v0.9d
# Build:    14071814
# Date:     Jul-18 2014, 2:09 PM EST
# Author:   Jochen Weber, SCAN Unit, Columbia University, NYC, NY, USA
# URL/Info: http://neuroelf.net/

# FILE FORMAT
DefaultProperty:Data
Description:Numeric Tabular Text data files (*.txt)
EncodingSyntax:ieee-le
Extensions:ntt # dummy extension!

# FIELDS
ListOfFields:!
type  !cond                   !disktype!datatype!dim                      !default !varname

# for reading
BLOOP !$BFFREAD               ! ! !1 ! !NTTin
EXPRE !                   !!!!! ...
@@ = struct('Header', struct, 'Data', []); ...
txhdr = fread(fid, [1, min(16384, $FILESIZE)], 'uint8=>char'); ...
fseek(fid, 0, -1); ...
thdr = txhdr; ...
for vc = [char([9, 10, 11, 12, 13]) ' +-.0123456789eE,;[|]'], ...
    thdr(thdr == vc) = []; ...
end, ...
if ~isempty(thdr), ...
    thdrok = false; ...
    thdr = splittocellc(txhdr, char([10, 11, 12, 13]), true, true, false); ...
    for txlc = 1:numel(thdr), ...
        if ~isempty(thdr{txlc}), ...
            if all(thdr{txlc} == 9 | thdr{txlc} == 32 | ...
                   (thdr{txlc} >= 43 & thdr{txlc} <= 46) | ...
                   (thdr{txlc} >= 48 & thdr{txlc} <= 57) | ...
                   thdr{txlc} == 69 | thdr{txlc} == 101), ...
                skpos = strfind(txhdr, thdr{txlc}); ...
                if isempty(skpos), ...
                    error('header incomplete or corrupt.'); ...
                end, ...
                fseek(fid, skpos(1) - 1, -1); ...
                thdr(txlc:end) = []; ...
                thdrok = true; ...
                break; ...
            end, ...
            if any(thdr{txlc} == 9), ...
                thdrl = splittocellc(thdr{txlc}, char(9), false, false, true); ...
            else, ...
                thdrl = splittocellc(thdr{txlc}, char([9, 32]), true, true, true); ...
            end, ...
            if numel(thdrl) > 1, ...
                thdr{txlc} = ddeblank(thdr{txlc}(numel(thdrl{1})+1:end)); ...
                thdrl{1}(thdrl{1} == '=' | thdrl{1} == ':' | thdrl{1} == ' ') = []; ...
                thvar = makelabel(thdrl{1}); ...
                if any(thdr{txlc} == 9), ...
                    thdr{txlc} = splittocellc(thdr{txlc}, char(9), false, false, true); ...
                end, ...
            else, ...
                thvar = sprintf('HeaderLine%04d', txlc); ...
            end, ...
            @Header.(thvar) = thdr{txlc}; ...
        end, ...
    end, ...
    if ~thdrok, ...
        error('header incomplete or corrupt.'); ...
    end, ...
end, ...
@Data = u8str2double(fread(fid, [1, Inf], '*uint8'));
EXPRE !                   !!!!! ...
$drepl = (abs(@Data(1, :) - size(@Data, 1)) <= 2); ...
if all($drepl), ...
    @Data(1, :) = []; ...
elseif any($drepl), ...
    @Data(1, $drepl) = (1 - eps) .* @Data(2, $drepl); ...
end
ELOOP !                       ! ! !  ! !NTTin
EndListOfFields

# new file code snippet
NewFileCode:!
@Header = struct;
@Data = [];
EndNewFileCode
