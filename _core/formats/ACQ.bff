# BinaryFileFormat (leave this tag as magic token!)

# Acqknowledge file format for *.ACQ files (Acqknowledge files)
# Acqknowledge version supported: <= 3.9.0
#
# Version:  v0.9b
# Build:    11050213
# Date:     Jun-15 2010, 12:37 PM EST
# Source:   http://www.biopac.com/Manuals/app_pdf/app156.pdf
# Editor:   Jochen Weber, SCAN Unit, Columbia University, NYC, NY, USA
# URL/Info: http://neuroelf.net/

# FILE FORMAT
DefaultProperty:Data
Description:Acqknowledge files
EncodingSyntax:ieee-le
Extensions:acq

# FIELDS
ListOfFields:!
type  !cond                   !disktype!datatype!dim                      !default !varname

# pre-write test
EXPRE !$BFFWRITE          !!!!!...
error( ...
    'xff:NoWriteSupport', ...
    'Write support for ACQ files is not yet fully available.' ...
); ...
@Unused0x0000 = 0; ...
@Reserved0x0094 = 0; ...
if @FileVersion > 45, ...
    error( ...
        'xff:InvalidFileVersion', ...
        'ACQ FileVersion > 45 not supported by xff.' ...
    ); ...
end, ...
@TimeUnits = zerodstring(@TimeUnits, 40); ...
@TimeUnitsShort = zerodstring(@TimeUnitsShort, 10); ...
@MajorGridRGB = sum([1, 256, 65536] .* min(255, max(0, fix(@MajorGridRGB)))); ...
@MinorGridRGB = sum([1, 256, 65536] .* min(255, max(0, fix(@MinorGridRGB))));

# parse header
EXPRE !$BFFREAD           !!!!!@@ = xff(0, 'newcont', 'acq');
FIELD !                       !uint16  !double  !1, 1                     !0       !Unused0x0000
FIELD !                       !uint32  !double  !1, 1                     !45      !FileVersion
EXPRE !$BFFREAD           !!!!!...
if @FileVersion > 45, ...
    error( ...
        'xff:InvalidFileVersion', ...
        'ACQ FileVersion > 45 not supported by xff.' ...
    ); ...
end
FIELD !                       !uint32  !double  !1, 1                     !        !HeaderLength
FIELD !                       !uint16  !double  !1, 1                     !        !NrOfChannels
FIELD !                       !uint16  !double  !1, 1                     !        !TimeAxisType
FIELD !                       !uint16  !double  !1, 1                     !        !SelectedChannel
FIELD !                       !double  !double  !1, 1                     !        !MillisecsPerSample
FIELD !                       !double  !double  !1, 1                     !        !TimeOffset
FIELD !                       !double  !double  !1, 1                     !        !TimeScale
FIELD !                       !double  !double  !1, 2                     !        !CursorPosition
FIELD !                       !int16   !double  !1, 4                     !        !ChartWindow
FIELD !                       !uint16  !double  !1, 6                     !        !Measurement
FIELD !                       !uint16  !double  !1, 1                     !        !Highlight
FIELD !                       !double  !double  !1, 1                     !        !FirstTimeOffset
FIELD !                       !uint16  !double  !1, 1                     !        !Autoscale
FIELD !                       !char    !char    !1, 40                    !        !TimeUnits
FIELD !                       !char    !char    !1, 10                    !        !TimeUnitsShort
FIELD !                       !uint16  !double  !1, 1                     !        !KeepInMemory
FIELD !                       !uint16  !double  !1, 1                     !        !DisplayGrid
FIELD !                       !uint16  !double  !1, 1                     !        !DisplayMarkers
FIELD !                       !uint16  !double  !1, 1                     !        !UseDraftPlotting
FIELD !                       !uint16  !double  !1, 1                     !        !ChartOrScope
FIELD !                       !uint16  !double  !1, 1                     !        !Reserved0x0094
EXPRE !                   !!!!!...
@TimeUnits = unzerostring(@TimeUnits); ...
@TimeUnitsShort = unzerostring(@TimeUnitsShort);

# only for FileVersion >= 34
BLOOP !@FileVersion >= 34     ! ! !1 ! !FV34PP
FIELD !                       !uint16  !double  !1, 1                     !        !ShowToolbar
FIELD !                       !uint16  !double  !1, 1                     !        !ShowChannelButtons
FIELD !                       !uint16  !double  !1, 1                     !        !ShowMeasurements
FIELD !                       !uint16  !double  !1, 1                     !        !ShowMarkers
FIELD !                       !uint16  !double  !1, 1                     !        !ShowJournal
FIELD !                       !uint16  !double  !1, 1                     !        !CurrentXChannel
FIELD !                       !uint16  !double  !1, 1                     !        !MeasurementPrecision
ELOOP !                       ! ! !  ! !FV34PP

# only for FileVersion >= 35
BLOOP !@FileVersion >= 35     ! ! !1 ! !FV35PP
FIELD !                       !uint16  !double  !1, 1                     !        !NrOfMeasurementRows
FIELD !                       !uint16  !double  !1, 40                    !        !MeasurementFunctions
FIELD !                       !int16   !double  !1, 40                    !        !MeasurementChannels
ELOOP !                       ! ! !  ! !FV35PP

# only for FileVersion >= 36
BLOOP !@FileVersion >= 36     ! ! !1 ! !FV36PP
FIELD !                       !int16   !double  !1, 40                    !        !MCalcOperand1
FIELD !                       !int16   !double  !1, 40                    !        !MCalcOperand2
FIELD !                       !int16   !double  !1, 40                    !        !MCalcOperator
FIELD !                       !double  !double  !1, 40                    !        !MCalcConstant
ELOOP !                       ! ! !  ! !FV36PP

# only for FileVersion >= 38
BLOOP !@FileVersion >= 38     ! ! !1 ! !FV38PP
FIELD !                       !uint32  !double  !1, 1                     !        !NewGridMinor
FIELD !                       !uint32  !double  !1, 1                     !        !MajorGridRGB
FIELD !                       !uint32  !double  !1, 1                     !        !MinorGridRGB
FIELD !                       !uint16  !double  !1, 1                     !        !MajorGridStyle
FIELD !                       !uint16  !double  !1, 1                     !        !MinorGridStyle
FIELD !                       !uint16  !double  !1, 1                     !        !MajorGridLineWidth
FIELD !                       !uint16  !double  !1, 1                     !        !MinorGridLineWidth
FIELD !                       !uint32  !double  !1, 1                     !        !GridLinesFixed
FIELD !                       !uint32  !double  !1, 1                     !        !GridLinesAsMidPointRange
FIELD !                       !double  !double  !1, 1                     !        !GridLinesStartPoint
FIELD !                       !double  !double  !1, 60                    !        !GridValueOffset
FIELD !                       !double  !double  !1, 1                     !        !GridHSpacing
FIELD !                       !double  !double  !1, 60                    !        !GridVSpacing
FIELD !                       !uint32  !double  !1, 1                     !        !EnableWaveTools
EXPRE !                   !!!!!...
@MajorGridRGB = [ ...
    mod(@MajorGridRGB, 256), ...
    mod(floor(@MajorGridRGB / 256), 256), ...
    floor(@MajorGridRGB / 65536)]; ...
@MinorGridRGB = [ ...
    mod(@MinorGridRGB, 256), ...
    mod(floor(@MinorGridRGB / 256), 256), ...
    floor(@MinorGridRGB / 65536)];
ELOOP !                       ! ! !  ! !FV38PP

# one additional setting for FileVersion >= 39
FIELD !@FileVersion >= 39     !uint16  !double  !1, 1                     !        !PrecisionDigitsInTimeUnit

# only for FileVersion >= 41
BLOOP !@FileVersion >= 41     ! ! !1 ! !FV41PP
FIELD !                       !uint8   !uint8   !1, 20                    !        !Reserved0x0768
FIELD !                       !uint32  !double  !1, 1                     !        !OverlapMode
FIELD !                       !uint32  !double  !1, 1                     !        !ShowHardware
FIELD !                       !uint32  !double  !1, 1                     !        !AcqAutoPlot
FIELD !                       !uint32  !double  !1, 1                     !        !AcqAutoScroll
FIELD !                       !uint32  !double  !1, 1                     !        !StartButtonVisible
FIELD !                       !uint32  !double  !1, 1                     !        !DataCompressed
FIELD !                       !uint32  !double  !1, 1                     !        !StartButtonVisibleAlways
ELOOP !                       ! ! !  ! !FV41PP

# only for FileVersion >= 43
BLOOP !@FileVersion >= 43     ! ! !1 ! !FV43PP
FIELD !                       !char    !char    !1, 260                   !        !VideoPlaybackFile
FIELD !                       !uint32  !double  !1, 1                     !        !UseSyncDelay
FIELD !                       !double  !double  !1, 1                     !        !SyncDelay
FIELD !                       !uint32  !double  !1, 1                     !        !PasteMeasuresToJournalOnHRP
ELOOP !                       ! ! !  ! !FV43PP

# only for FileVersion >= 45
BLOOP !@FileVersion >= 45     ! ! !1 ! !FV45PP
EXPRE !$BFFWRITE          !!!!!...
mce = char(zeros(256, 40)); ...
for mcec = 1:40, ...
    mce(:, mcec) = zerodstring(@MCalcExpression{mcec}, 256)'; ...
end, ...
@MCalcExpression = mce;
FIELD !                       !uint32  !double  !1, 1                     !        !GraphType
FIELD !                       !char    !char    !256, 40                  !        !MCalcExpression
FIELD !                       !int32   !double  !1, 40                    !        !MeasurementM2MOrder
FIELD !                       !int32   !double  !1, 40                    !        !MeasurementTimeDelay
FIELD !                       !int32   !double  !1, 40                    !        !MeasurementEmbedDim
FIELD !                       !int32   !double  !1, 40                    !        !MeasurementMutialInfoDelay
EXPRE !                   !!!!!...
mce = cell(1, 40); ...
for mcec = 1:40, ...
    mce{mcec} = unzerostring(@MCalcExpression(:, mcec)'); ...
end, ...
@MCalcExpression = mce;
ELOOP !                       ! ! !  ! !FV45PP

# check HeaderLength field
EXPRE !$BFFREAD           !!!!!...
if @HeaderLength ~= ftell(fid), ...
    error( ...
        'xff:BadFileContent', ...
        'HeaderLength field incorrect.' ...
    ); ...
end, ...
$AccumulatedPCHLength = @HeaderLength;

# now we begin reading per-channel headers
EXPRE !$BFFREAD           !!!!!...
@Channel = emptystruct({ ...
    'PCHLength', 'DataType', 'BytesPerSample', 'ChannelNumber', 'Comment', ...
    'ColorRGB', 'DisplayChannel', 'VoltageOffset', 'VoltageFactor', ...
    'Unit', 'NrOfSamples', 'AmplitudeScale', 'AmplitudeOffset', ...
    'DisplayChannelOrder', 'DisplayChannelSize', 'PlotMode', ...
    'Mid', 'Description', 'SubsamplingFactor', 'SubsamplingIndices', ...
    'VerticalPrecision', 'ActiveSegmentRGB', 'ActiveSegmentStyle', ...
    'Data'}, [1, @NrOfChannels]);
BLOOP !                       ! ! !@NrOfChannels ! !CHeadNr
EXPRE !                   !!!!!...
if $BFFWRITE, ...
    @Channel($CHeadNr).Comment = zerodstring(@Channel($CHeadNr).Comment, 40); ...
    @Channel($CHeadNr).ColorRGB = ...
        sum([1, 256, 65536] .* min(255, max(0, fix(@Channel($CHeadNr).ColorRGB)))); ...
    @Channel($CHeadNr).Unit = zerodstring(@Channel($CHeadNr).Unit, 20); ...
else, ...
    @Channel($CHeadNr).SubsamplingFactor = 1; ...
end
FIELD !                       !uint32  !double  !1, 1                     !        !Channel($CHeadNr).PCHLength
FIELD !                       !uint16  !double  !1, 1                     !        !Channel($CHeadNr).ChannelNumber
FIELD !                       !char    !char    !1, 40                    !        !Channel($CHeadNr).Comment
FIELD !                       !uint32  !double  !1, 1                     !        !Channel($CHeadNr).ColorRGB
FIELD !                       !uint16  !double  !1, 1                     !        !Channel($CHeadNr).DisplayChannel
FIELD !                       !double  !double  !1, 1                     !        !Channel($CHeadNr).VoltageOffset
FIELD !                       !double  !double  !1, 1                     !        !Channel($CHeadNr).VoltageFactor
FIELD !                       !char    !char    !1, 20                    !        !Channel($CHeadNr).Unit
FIELD !                       !uint32  !double  !1, 1                     !        !Channel($CHeadNr).NrOfSamples
FIELD !                       !double  !double  !1, 1                     !        !Channel($CHeadNr).AmplitudeScale
FIELD !                       !double  !double  !1, 1                     !        !Channel($CHeadNr).AmplitudeOffset
FIELD !                       !uint16  !double  !1, 1                     !        !Channel($CHeadNr).DisplayChannelOrder
FIELD !                       !uint16  !double  !1, 1                     !        !Channel($CHeadNr).DisplayChannelSize
EXPRE !                   !!!!!...
@Channel($CHeadNr).Comment = unzerostring(@Channel($CHeadNr).Comment); ...
@Channel($CHeadNr).ColorRGB = [ ...
    mod(@Channel($CHeadNr).ColorRGB, 256), ...
    mod(floor(@Channel($CHeadNr).ColorRGB / 256), 256), ...
    floor(@Channel($CHeadNr).ColorRGB / 65536)]; ...
@Channel($CHeadNr).Unit = unzerostring(@Channel($CHeadNr).Unit);

# only for FileVersion >= 34
BLOOP !@FileVersion >= 34     ! ! !1 ! !FV34PCH
FIELD !                       !uint16  !double  !1, 1                     !        !Channel($CHeadNr).PlotMode
FIELD !                       !double  !double  !1, 1                     !        !Channel($CHeadNr).Mid
ELOOP !                       ! ! !  ! !FV34PCH

# only for FileVersion >= 38
BLOOP !@FileVersion >= 38     ! ! !1 ! !FV38PCH
EXPRE !$BFFWRITE          !!!!!...
@Channel($CHeadNr).Description = zerodstring(@Channel($CHeadNr).Description, 128);
FIELD !                       !char    !char    !1, 128                   !        !Channel($CHeadNr).Description
FIELD !                       !int16   !double  !1, 1                     !        !Channel($CHeadNr).SubsamplingFactor
EXPRE !                   !!!!!...
@Channel($CHeadNr).Description = unzerostring(@Channel($CHeadNr).Description); ...
if @Channel($CHeadNr).SubsamplingFactor < 1, ...
    @Channel($CHeadNr).SubsamplingFactor = 1; ...
end
ELOOP !                       ! ! !  ! !FV38PCH

# only for FileVersion >= 39
FIELD !@FileVersion >= 39     !int16   !double  !1, 1                     !        !Channel($CHeadNr).VerticalPrecision

# only for FileVersion >= 43
BLOOP !@FileVersion >= 43     ! ! !1 ! !FV43PCH
EXPRE !$BFFWRITE          !!!!!...
@Channel($CHeadNr).ActiveSegmentRGB = ...
    sum([1, 256, 65536] .* min(255, max(0, fix(@Channel($CHeadNr).ActiveSegmentRGB))));
FIELD !                       !uint32  !double  !1, 1                     !        !Channel($CHeadNr).ActiveSegmentRGB
FIELD !                       !uint32  !double  !1, 1                     !        !Channel($CHeadNr).ActiveSegmentStyle
EXPRE !                   !!!!!...
@Channel($CHeadNr).ActiveSegmentRGB = [ ...
    mod(@Channel($CHeadNr).ActiveSegmentRGB, 256), ...
    mod(floor(@Channel($CHeadNr).ActiveSegmentRGB / 256), 256), ...
    floor(@Channel($CHeadNr).ActiveSegmentRGB / 65536)];
ELOOP !                       ! ! !  ! !FV43PCH

# check channel header length
EXPRE !$BFFREAD           !!!!!...
if ($AccumulatedPCHLength + @Channel($CHeadNr).PCHLength) ~= ftell(fid), ...
    error( ...
        'xff:BadFileContent', ...
        'Invalid Per-Channel HeaderLength.' ...
    ); ...
end, ...
$AccumulatedPCHLength = $AccumulatedPCHLength + @Channel($CHeadNr).PCHLength;
ELOOP !                       ! ! !  ! !CHeadNr

# foreign data section
EXPRE !$BFFWRITE          !!!!!@ForeignDataLength = numel(@ForeignData) + 4;
FIELD !                       !uint16  !double  !1, 1                     !        !ForeignDataLength
EXPRE !                   !!!!!@ForeignDataLength = @ForeignDataLength - 4;
FIELD !                       !uint16  !double  !1, 1                     !        !ForeignDataID
FIELD !                       !uint8   !uint8   !1, @ForeignDataLength    !        !ForeignData

# per-channel type and number of bytes per sample comes here (dough!)
BLOOP !                       ! ! !@NrOfChannels ! !CHeadNr2
FIELD !                       !uint16  !double  !1, 1                     !        !Channel($CHeadNr2).BytesPerSample
FIELD !                       !uint16  !double  !1, 1                     !        !Channel($CHeadNr2).DataType
ELOOP !                       ! ! !  ! !CHeadNr2

# reading data
BLOOP !$BFFREAD               ! ! !1 ! !ReadData

# figure out the datatype per channel and then the subsampling factors
EXPRE !                   !!!!!...
chdtp = [@Channel(:).DataType]; ...
chssf = 1 ./ [@Channel(:).SubsamplingFactor]; ...
chnrs = [@Channel(:).NrOfSamples] .* [@Channel(:).SubsamplingFactor]; ...
chssi = 1:numel(chssf); ...
if ~all(chssf == chssf(1)), ...
    chssc = chssf; ...
    while(~all(abs(chssc - floor(chssc + sqrt(eps))) < sqrt(eps))), ...
        chssi = [chssi, find(chssc >= (1 - sqrt(eps)))]; ...
        chssc = chssc + chssf; ...
    end, ...
end, ...
for chsc = 1:numel(chssf), ...
    @Channel(chsc).SubsamplingIndices = find(chssi == chsc); ...
end, ...
$SampleWidth = numel(chssi); ...
$NrOfSamples = @Channel(minpos(chssf)).NrOfSamples;

# all data is the same type
BLOOP !all(chdtp == chdtp(1)) && all(chnrs == chnrs(1)) ! ! !1 ! !ReadDataSameTypeLen

# now comes the reading part
FIELD !chdtp == 1             !double  !double  !$SampleWidth, $NrOfSamples!       !RawData
FIELD !chdtp ~= 1             !int16   !double  !$SampleWidth, $NrOfSamples!       !RawData
ELOOP !                       ! ! !  ! !ReadDataSameTypeLen

# not all data is the same type or length
BLOOP !any(chdtp ~= chdtp(1)) || any(chnrs ~= chnrs(1)) ! ! !1 ! !ReadDataDiffTypeLen

# this will not support transio, so the code is just in here...
EXPRE !                   !!!!!...
@RawData = []; ...
chscnt = zeros(1, numel(chdtp)); ...
chssui = zeros(1, numel(chssi)); ...
for chsc = 1:numel(chssi), ...
    chscnt(chssi(chsc)) = chscnt(chssi(chsc)) + 1; ...
    chssui(chsc) = chscnt(chssi(chsc)); ...
end, ...
if all(chnrs == chnrs(1)), ...
    smpwid = (chdtp(chssi) ~= 1) + 4 .* (chdtp(chssi) == 1); ...
    i16wid = sum(smpwid); ...
    i16off = 1 + [0, cumsum(smpwid)]; ...
    dblwid = 0.25 * i16wid; ...
    i16dpos = ftell(fid); ...
    i16data = fread(fid, [i16wid, $NrOfSamples], '*int16'); ...
    i16xpos = ftell(fid); ...
    for chsc = find(chdtp ~= 1), ...
        @Channel(chsc).Data = ...
            @Channel(chsc).AmplitudeOffset + ...
            @Channel(chsc).AmplitudeScale .* ...
            lsqueeze(double(i16data(i16off(find(chssi == chsc)), :))); ...
    end, ...
    for chsc = find(chdtp == 1), ...
        @Channel(chsc).Data = zeros(@Channel(chsc).NrOfSamples, 1); ...
    end, ...
    dbloff = 2 .* (i16off - 1); ...
    dblwid = 2 * i16wid - 8; ...
    dblsmp = (chdtp(chssi) == 1); ...
    dblsmpi = findfirst(dblsmp); ...
    while ~isempty(dblsmpi), ...
        fseek(fid, i16dpos + dbloff(dblsmpi) - 2 * i16wid, 'bof'); ...
        dbldata = fread(fid, $NrOfSamples, '1*double=>double', dblwid); ...
        dblsmp1 = chssui(dblsmpi); ...
        dblskip = chscnt(chssi(dblsmpi)); ...
        dblnsmp = ceil((numel(dbldata) - dblsmp1) / dblskip); ...
        dblsmpe = dblsmp1 + (dblnsmp - 1) * dblskip; ...
        @Channel(chssi(dblsmpi)).Data(dblsmp1:dblskip:dblsmpe) = ...
            dbldata(2:dblnsmp+1); ...
        dblsmp(dblsmpi) = false; ...
        dblsmpi = findfirst(dblsmp); ...
    end, ...
    fseek(fid, i16xpos, 'bof'); ...
else, ...
    error( ...
        'xff:NotYetSupported', ...
        'Reading data with different sampling lengths not yet supported.' ...
    ); ...
end

ELOOP !                       ! ! !  ! !ReadDataDiffTypeLen

ELOOP !                       ! ! !  ! !ReadData

# markers
FIELD !                       !uint32  !double  !1, 1                     !        !TotalMarkersLength
FIELD !                       !uint32  !double  !1, 1                     !        !NrOfMarkers
EXPRE !$BFFREAD           !!!!!...
@Marker = emptystruct({ ...
    'Location', 'Selected', 'TextLocked', 'PositionLocked', ...
    'TextLength', 'Text'}, [1, @NrOfMarkers]); ...
$CheckPosition = ftell(fid) + @TotalMarkersLength;
BLOOP !                       ! ! !@NrOfMarkers ! !MarkerNr
EXPRE !$BFFWRITE          !!!!!...
@Marker($MarkerNr).TextLength = numel(@Marker($MarkerNr).Text) + 1; ...
@Marker($MarkerNr).Text = ...
    zerodstring(@Marker($MarkerNr).Text, @Marker($MarkerNr).TextLength);
FIELD !                       !int32   !double  !1, 1                     !        !Marker($MarkerNr).Location
FIELD !                       !uint16  !double  !1, 1                     !        !Marker($MarkerNr).Selected
FIELD !                       !uint16  !double  !1, 1                     !        !Marker($MarkerNr).TextLocked
FIELD !                       !uint16  !double  !1, 1                     !        !Marker($MarkerNr).PositionLocked
FIELD !                       !uint16  !double  !1, 1                     !        !Marker($MarkerNr).TextLength
FIELD !                       !cstring !cstring !1, 1                     !        !Marker($MarkerNr).Text
EXPRE !$BFFREAD           !!!!!...
if numel(@Marker($MarkerNr).Text) ~= @Marker($MarkerNr).TextLength, ...
    error( ...
        'xff:BadFileContent', ...
        'Marker text length field doesn''t match with 0-terminated string.' ...
    ); ...
end
ELOOP !                       ! ! !  ! !MarkerNr
EXPRE !$BFFREAD           !!!!!...
if ftell(fid) ~= $CheckPosition, ...
    error( ...
        'xff:BadFileContent', ...
        'Markers don''t match with length.' ...
    ); ...
end

# writing data
BLOOP !$BFFWRITE              ! ! !1 ! !WriteData
ELOOP !                       ! ! !  ! !WriteData

# read rest of File into REMAININGCONTENT
EXPRE !$BFFREAD   !  !  !  !  !$RemSize = $FILESIZE - ftell(fid);
EXPRE !$BFFWRITE  !  !  !  !  !$RemSize = 0; try, if isfield(@@, 'REMAININGCONTENT'), $RemSize = prod(size(@REMAININGCONTENT)); end, end
FIELD !$RemSize > 0           !uint8   !uint8   !1, $RemSize              !        !REMAININGCONTENT

EndListOfFields

# new file code snippet
NewFileCode:!
@Unused0x0000 = 0;
@FileVersion = 45;
@HeaderLength = 13104;
@NrOfChannels = 0;
@TimeAxisType = 0;
@SelectedChannel = 1;
@MillisecsPerSample = 1;
@TimeOffset = 1;
@TimeScale = 1000;
@CursorPosition = [1, 1];
@ChartWindow = zeros(1, 4);
@Measurement = zeros(1, 6);
@Highlight = 0;
@FirstTimeOffset = 0;
@Autoscale = 0;
@TimeUnits = '';
@TimeUnitsShort = '';
@KeepInMemory = 0;
@DisplayGrid = 0;
@DisplayMarkers = 0;
@UseDraftPlotting = 0;
@ChartOrScope = 1;
@Reserved0x0094 = 0;
@ShowToolbar = 1;
@ShowChannelButtons = 1;
@ShowMeasurements = 1;
@ShowMarkers = 1;
@ShowJournal = 0;
@CurrentXChannel = 16;
@MeasurementPrecision = 8;
@NrOfMeasurementRows = 1;
@MeasurementFunctions = zeros(1, 40);
@MeasurementChannels = -ones(1, 40);
@MCalcOperand1 = zeros(1, 40);
@MCalcOperand2 = zeros(1, 40);
@MCalcOperator = zeros(1, 40);
@MCalcConstant = zeros(1, 40);
@NewGridMinor = 0;
@MajorGridRGB = [128, 128, 128];
@MinorGridRGB = [192, 192, 192];
@MajorGridStyle = 0;
@MinorGridStyle = 2;
@MajorGridLineWidth = 1;
@MinorGridLineWidth = 1;
@GridLinesFixed = 0;
@GridLinesAsMidPointRange = 0;
@GridLinesStartPoint = 1;
@GridValueOffset = zeros(1, 60);
@GridHSpacing = 4;
@GridVSpacing = 4 .* ones(1, 60);
@EnableWaveTools = 1;
@PrecisionDigitsInTimeUnit = 5;
@Reserved0x0768 = uint8(zeros(1, 20));
@OverlapMode = 0;
@ShowHardware = 0;
@AcqAutoPlot = 1;
@AcqAutoScroll = 1;
@StartButtonVisible = 1;
@DataCompressed = 0;
@StartButtonVisibleAlways = 1;
@VideoPlaybackFile = '';
@UseSyncDelay = 0;
@SyncDelay = 0;
@PasteMeasuresToJournalOnHRP = 0;
@GraphType = 0;
@MCalcExpression = repmat({''}, 1, 40);
@MeasurementM2MOrder = zeros(1, 40);
@MeasurementTimeDelay = zeros(1, 40);
@MeasurementEmbedDim = ones(1, 40); 
@MeasurementMutialInfoDelay = zeros(1, 40);
@Channel = emptystruct({ ...
    'PCHLength', 'DataType', 'BytesPerSample', 'ChannelNumber', 'Comment', ...
    'ColorRGB', 'DisplayChannel', 'VoltageOffset', 'VoltageFactor', ...
    'Unit', 'NrOfSamples', 'AmplitudeScale', 'AmplitudeOffset', ...
    'DisplayChannelOrder', 'DisplayChannelSize', 'PlotMode', ...
    'Mid', 'Description', 'SubsamplingFactor', 'SubsamplingIndices', ...
    'VerticalPrecision', 'ActiveSegmentRGB', 'ActiveSegmentStyle', ...
    'Data'});
@ForeignDataLength = 0;
@ForeignDataID = 0;
@ForeignData = uint8([]);
@RawData = [];
@TotalMarkersLength = -1;
@NrOfMarkers = 0;
@Marker = emptystruct({ ...
    'Location', 'Selected', 'TextLocked', 'PositionLocked', ...
    'TextLength', 'Text'});
EndNewFileCode
