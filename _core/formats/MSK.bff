# BinaryFileFormat (leave this tag as its own magic token!)

# BrainVoyager QX file format for *.MSK files (MaSK volume)
# MSK FileVersions supported: 
#
# Version:  v0.9a
# Build:    11050313
# Date:     May-16 2010, 8:24 PM EST
# Author:   Jochen Weber, SCAN Unit, Columbia University, NYC, NY, USA
# URL/Info: http://neuroelf.net/

# FILE FORMAT
DefaultProperty:Mask
Description:Mask files
EncodingSyntax:ieee-le
Extensions:msk

# CODE
BeforeWriteCode:!
    $XYZDim = size(@Mask);
    $XDim   = $XYZDim(1);
    $YDim   = $XYZDim(2);
    $ZDim   = $XYZDim(3);
    if ...
        $XDim ~= fix((@XEnd - @XStart) / @Resolution) || ...
        $YDim ~= fix((@YEnd - @YStart) / @Resolution) || ...
        $ZDim ~= fix((@ZEnd - @ZStart) / @Resolution)
            error('Invalid Dim/?End/?Start combination');
    end
EndBeforeWriteCode

# FIELDS
ListOfFields:!
type  !cond                   !disktype!datatype!dim                      !default !varname
FIELD !                       !uint16  !double  !1, 1                     !        !Resolution
FIELD !                       !uint16  !double  !1, 1                     !        !XStart
FIELD !                       !uint16  !double  !1, 1                     !        !XEnd
FIELD !                       !uint16  !double  !1, 1                     !        !YStart
FIELD !                       !uint16  !double  !1, 1                     !        !YEnd
FIELD !                       !uint16  !double  !1, 1                     !        !ZStart
FIELD !                       !uint16  !double  !1, 1                     !        !ZEnd
EXPRE !$BFFREAD           !!!!!$XDim = fix((@XEnd - @XStart) / @Resolution); $YDim = fix((@YEnd - @YStart) / @Resolution); $ZDim = fix((@ZEnd - @ZStart) / @Resolution);
FIELD !~$HEADERONLY           !uint8   !uint8   !$XDim, $YDim, $ZDim      !        !Mask
EXPRE ! $HEADERONLY       !!!!!@Mask = []; fseek(fid, $XDim * $YDim * $ZDim, 0);

# Read rest of File into REMAININGCONTENT
EXPRE !$HEADERONLY        !!!!!fseek(fid, 0, 1);
EXPRE !$BFFREAD           !!!!!$RemSize = $FILESIZE - ftell(fid);
EXPRE !$BFFWRITE          !!!!!$RemSize = 0; try, if isfield(@@, 'REMAININGCONTENT'), $RemSize = prod(size(@REMAININGCONTENT)); end, end
FIELD !$RemSize > 0           !uint8   !uint8   !1, $RemSize              !        !REMAININGCONTENT

EndListOfFields

# new file code snippet
NewFileCode:!
@Resolution = 3;
@XStart = 57;
@XEnd = 231;
@YStart = 52;
@YEnd = 172;
@ZStart = 59;
@ZEnd = 197;
tXDim = fix((@XEnd - @XStart) / @Resolution);
tYDim = fix((@YEnd - @YStart) / @Resolution);
tZDim = fix((@ZEnd - @ZStart) / @Resolution);
@Mask = uint8(0); @Mask(tXDim, tYDim, tZDim) = @Mask(1);
EndNewFileCode
