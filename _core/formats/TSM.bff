# BinaryFileFormat (leave this tag as its own magic token!)

# BrainVoyager QX file format for *.TSM files (Triangular Sphere Mapping info)
# TSM FileVersions supported: 1
#
# Version:  v0.9a
# Build:    10051716
# Date:     May-16 2010, 8:24 PM EST
# Author:   Jochen Weber, SCAN Unit, Columbia University, NYC, NY, USA
# URL/Info: http://neuroelf.net/

# Copyright (c) 2010, Jochen Weber
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of Columbia University nor the
#       names of its contributors may be used to endorse or promote products
#       derived from this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# FILE FORMAT
Description:Sphere-to-sphere mapping files
EncodingSyntax:ieee-le
Extensions:tsm

# FIELDS
ListOfFields:!
type  !cond                   !disktype!datatype!dim                      !default !varname
FIELD !                       !uint16  !double  !1, 1                     !1       !FileVersion
FIELD !                       !uint32  !double  !1, 1                     !        !NrOfTargetVertices
FIELD !                       !uint32  !double  !1, 1                     !        !NrOfSourceVertices
FIELD !                       !uint32  !double  !1, 1                     !        !NrOfSourceTriangles
EXPRE !$BFFWRITE          !!!!!@SourceTriangleOfTarget = @SourceTriangleOfTarget - 1; @TriangleEdgeLengths = @TriangleEdgeLengths';
FIELD !~$HEADERONLY           !uint32  !double  !@NrOfTargetVertices, 1   !        !SourceTriangleOfTarget
FIELD !~$HEADERONLY           !single  !double  !2, @NrOfTargetVertices   !        !TriangleEdgeLengths
EXPRE ! $HEADERONLY       !!!!!@SourceTriangleOfTarget = []; @TriangleEdgeLengths = []; fseek(fid, 12 * @NrOfTargetVertices, 0);
EXPRE !                   !!!!!@SourceTriangleOfTarget = @SourceTriangleOfTarget + 1; @TriangleEdgeLengths = @TriangleEdgeLengths';

# Read rest of File into REMAININGCONTENT
EXPRE !$HEADERONLY        !!!!!fseek(fid, 0, 1);
EXPRE !$BFFREAD           !!!!!$RemSize = $FILESIZE - ftell(fid);
EXPRE !$BFFWRITE          !!!!!$RemSize = 0; try, if isfield(@@, 'REMAININGCONTENT'), $RemSize = prod(size(@REMAININGCONTENT)); end, end
FIELD !$RemSize > 0           !uint8   !uint8   !1, $RemSize              !        !REMAININGCONTENT

EndListOfFields

NewFileCode:!
@FileVersion = 1;
@NrOfTargetVertices = 0;
@NrOfSourceVertices = 0;
@NrOfSourceTriangles = 0;
@SourceTriangleOfTarget = zeros(@NrOfTargetVertices, 1);
@TriangleEdgeLengths = zeros(@NrOfTargetVertices, 2);
EndNewFileCode
