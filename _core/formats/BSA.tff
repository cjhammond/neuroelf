# TextFileFormat (leave this tag as magic token!)

# BESA file format for *.BSA files (Besa Source Angulation ? files)
# BSA FileVersions supported: 1.04
#
# Version:  v0.9a
# Build:    11050318
# Date:     May-16 2010, 8:24 PM EST
# Author:   Jochen Weber, SCAN Unit, Columbia University, NYC, NY, USA
# URL/Info: http://neuroelf.net/

# FILE FORMAT
Description:Besa dipole Source Angulation files
Extensions:bsa
FieldDelimiters: {[32]}
LineDelimiters: {[13, 10], [10]}
ParagraphArrays:0
SkipEmptyLines:1

# FIELDS
ListOfFields:!
type !cond               !field               !datatype!format !dim    !default !varname

# no write support yet
EXPRE!$TFFWRITE     !!!!!!error('No write support yet');

# header
WRTLN!!!!!!!BSA_1.04.19990715|HC
WRTLN!!!!!!!Type          x-loc       y-loc       z-loc        x-ori       y-ori       z-ori      color state size
WRTLN!!!!!!!=======================================================================================================

# prepare structures
EXPRE!$TFFREAD      !!!!!!...
$NrOfLines = $LINECOUNT - 3; ...
@NrOfRegSrc = 0; ...
@NrOfSngDip = 0; ...
@RegSrc = emptystruct({ ...
    'Position', 'Orientation', 'Color', 'State', 'Size', 'TransType', ...
    'TransFlag1', 'TransFlag2', 'TransVal1', 'TransVal2', 'RotationMatrix'}); ...
@SngDip = emptystruct({'Position', 'Orientation', 'Color', 'State', 'Size'});

# read points
BLOOP!$TFFREAD !!!!$NrOfLines !!RLineNo
EXPRE!!!!!!!...
$LineType = 0; ...
$linec = {}; ...
if numel(linecont{linec}) > 6, ...
switch (linecont{linec}(1:6)), ...
case {'RegSrc'}, ...
$LineType = 1; ...
case {'SngDip'}, ...
$LineType = 2; ...
end, ...
$linec = splittocell(linecont{linec}(7:end), char([9, 32]), 1, 1); ...
if ~isempty($linec) && isempty($linec{1}), ...
$linec(1) = []; ...
end, ...
end, ...
linec = linec + 1; ...
t_str = struct;

SKIPN!numel($linec) < 9 !!!!5 !!BadLine

EXPRE!!!!!!!...
t_str.Position = eval(['[' gluetostring($linec(1:3), ', ') ']'], '[0, 0, 0]'); ...
t_str.Orientation = eval(['[' gluetostring($linec(4:6), ', ') ']'], '[0, 0, 0]'); ...
t_str.Color = eval($linec{7}, '0'); ...
t_str.Color = [mod(t_str.Color, 256), floor(mod(t_str.Color, 65536) / 256), floor(t_str.Color / 65536)]; ...
t_str.State = eval($linec{8}, '4'); ...
t_str.Size = eval($linec{9}, '4');

BLOOP!$LineType == 1!!!!1 !!ExtLine

EXPRE!!!!!!!$linec = splittocell($linec{10}, '|');

SKIPN!numel($linec) < 14!!!!1 !!BadExtLine

EXPRE!!!!!!!...
t_str.TransType = $linec{1}; ...
t_str.TransFlag1 = eval($linec{2}, '2'); ...
t_str.TransFlag2 = eval($linec{3}, '-1'); ...
t_str.TransVal1 = eval($linec{4}, '0'); ...
t_str.TransVal2 = eval($linec{5}, '0'); ...
t_str.RotationMatrix = reshape(eval(['[' gluetostring($linec(6:14), ', ') ']'], 'eye(3)'), [3, 3]);

ELOOP!              !!!!  !!ExtLine

EXPRE!!!!!!!...
if $LineType == 1, ...
    if isfield(t_str, 'RotationMatrix'), ...
        @NrOfRegSrc = @NrOfRegSrc + 1; ...
        @RegSrc(@NrOfRegSrc) = t_str; ...
    end, ...
elseif $LineType == 2, ...
    if isfield(t_str, 'Size'), ...
        @NrOfSngDip = @NrOfSngDip + 1; ...
        @SngDip(@NrOfSngDip) = t_str; ...
    end, ...
end

ELOOP!         !!!! !!RLineNo

# fill convenience table
EXPRE!$TFFREAD      !!!!!!...
@RegSrcCoords = zeros(@NrOfRegSrc, 3); ...
@SngDipCoords = zeros(@NrOfSngDip, 3); ...
for t_c = 1:@NrOfRegSrc, ...
    @RegSrcCoords(t_c, :) = @RegSrc(t_c).Position; ...
end, ...
for t_c = 1:@NrOfSngDip, ...
    @SngDipCoords(t_c, :) = @SngDip(t_c).Position; ...
end

# end of code
EndListOfFields

# new file code
NewFileCode:!
@NrOfRegSrc = 0;
@NrOfSngDip = 0;
@RegSrc = emptystruct({ ...
    'Position', 'Orientation', 'Color', 'State', 'Size', 'TransType', ...
    'TransFlag1', 'TransFlag2', 'TransVal1', 'TransVal2', 'RotationMatrix'});
@SngDip = emptystruct({'Position', 'Orientation', 'Color', 'State', 'Size'});
@RegSrcCoords = zeros(0, 3);
@SngDipCoords = zeros(0, 3);
EndNewFileCode
